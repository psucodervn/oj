{{ define "main.cc" }}/*
  Task: {{ .Name }}
  Site: {{ .Site }}
  Link: {{ .URL }}
*/
#include <bits/stdc++.h>
using namespace std;

void err(istream_iterator<string> it) { cerr << endl; }
template<typename T, typename... Args> void err(istream_iterator<string> it, T a, Args... args) { cerr << *it << " = " << a << ", "; err(++it, args...); }
#define db(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
#define dba(ar) { cerr << #ar << " = ["; for (auto x : ar) cerr << " " << x; cerr << "]" << endl; }

int main(int argc, char* argv[]) {
  ios::sync_with_stdio(false); cin.tie(nullptr);
  {{- if ne .Input "stdin" }}
  freopen("{{ .Input }}", "r", stdin);
  {{- end }}
  {{- if ne .Output "stdout" }}
  freopen("{{ .Output }}", "r", stdout);
  {{- end }}
  return 0;
}
{{ end }}

{{- define "test.sh" }}#!/bin/bash
if ! g++ -g -std=c++14 -Wall $DBG main.cc; then
    exit
fi
cd tests
INPUT_EXT=in
OUTPUT_EXT=out
MY_EXT=res
rm -R *$MY_EXT &>/dev/null
for test_file in *.$INPUT_EXT
do
    i=$((${#INPUT_EXT}))
    test_case=${test_file:0:$i-1}
    if ! `which gtime` -o time.out -f "(%es)" ../a.out < $test_case.$INPUT_EXT > $test_case.$MY_EXT; then
        echo [1m[31mSample test \#$test_case: Runtime Error[0m `cat time.out`
        echo ========================================
        echo Sample Input \#$test_case
        cat $test_case.$INPUT_EXT
    else
        if diff --brief --strip-trailing-cr --ignore-space-change $test_case.$MY_EXT $test_case.$OUTPUT_EXT; then
            echo [1m[32mSample test \#$test_case: Accepted[0m `cat time.out`
        else
            echo [1m[31mSample test \#$test_case: Wrong Answer[0m `cat time.out`
            echo ========================================
            echo Sample Input \#$test_case
            cat $test_case.$INPUT_EXT
            echo ========================================
            echo Sample Output \#$test_case
            cat $test_case.$OUTPUT_EXT
            echo ========================================
            echo My Output \#$test_case
            cat $test_case.$MY_EXT
            echo ========================================
        fi
    fi
done
{{- end }}